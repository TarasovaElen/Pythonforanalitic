#!/usr/bin/env python
# coding: utf-8

# In[24]:


get_ipython().system('pip install pandas')


# In[2]:


import pandas as pd


# In[3]:


pd.__version__


# In[ ]:





# - Скачать файл в уроке
# - Считать данные с помощью pandas
# - Вывести на экран первые 5 строк
# - Посмотреть на описание признаков и на их содержание

# In[5]:


df = pd.read_csv('C:/Users/Елена/Desktop/Аналитик данных/Python для аналитиков/HW/kc_house_data.csv')
df.head()


# In[6]:


df.info()


# ## 2 задача

# - Проведите первичный анализ данных
# - Изучите типы данных
# - Найдите количество пропущенных ячеек в данных
# - Посчитайте основные статистики по всем признакам и поизучайте их
# - Пишите выводы

# In[7]:


df.isnull().sum()


# In[8]:


df.describe()


# 1. В датасете представлена информация о продаваемых частных жилых домах в штате Вашингтон (индексы 98001-98199).
# 2. Среднее количество спален в домах - 3, жилая площадь - 2079 квадратных футов, площадь земельного участка - 15 106 квадратных футов.
# 3. Дома в основном имеют 1-2 этажа и располагаются преимущественно не на береговой линии.
# 4. Средний возраст домов - 52 года (2023 - 1971)
# 5. Самый старый дом построен в 1900 году, самый новый - в 2015.
# 6. Среднее состояние домов по 5-ти бальной шкале - удовлетворительное (3,4 балла)
# 7. Максимальное количество просмотров домов потенциальными покупателями - 4

# ## 3 задача

# Ответьте на несколько вопросов

# 3.1 В каком диапазоне изменяются стоимости недвижимости?

# In[9]:


min_price, max_price = df['price'].min(), df['price'].max()
print(f'Диапазон стоимости недвижимости: {min_price}$ - {max_price}$')


# 
# 3.2 Какую долю в среднем занимают жилая площадь от всей площади по всем домам?

# In[11]:


percentage = (df['sqft_living'] / df['sqft_lot']).mean() * 100
print(f'{percentage}%')


# 3.3 Как много домов с разными этажами в данных?

# In[12]:


df['floors'].value_counts()


# 3.4 Насколько хорошие состояния у домов в данных?

# In[13]:


df['condition'].value_counts(normalize=True).mul(100).round(1).astype(str) + '%'


# 
# 3.5 Найдите года, когда построили первый дом, когда построили последний дом в данных?

# In[14]:


first_house, last_house = df['yr_built'].min(), df['yr_built'].max()
print(first_house)
print(last_house)


# 4 задача

# 4.1 Сколько в среднем стоят дома, у которых 2 спальни?

# In[15]:


df[df['bedrooms'] == 2]['price'].mean()


# 4.2 Какая в среднем общая площадь домов, у которых стоимость больше 600 000?

# In[16]:


df[df['price'] > 600000]['sqft_lot'].mean()


# 4.3 Как много домов коснулся ремонт?

# In[17]:


df[df['yr_renovated'] != 0]['id'].count()


# 4.4 Насколько в среднем стоимость домов с оценкой grade домов выше 10 отличается от стоимости домов с оценкой grade меньше 4?

# In[18]:


df[df['grade'] > 10]['price'].mean() - df[df['grade'] < 4]['price'].mean()


# 5.1 Выберите дом клиенту

# Клиент хочет дом с видом на набережную, как минимум с тремя ванными и с подвалом. Сколько вариантов есть у клиента?

# In[19]:


df[(df['waterfront'] == 1) & (df['bathrooms'] >= 3) & (df['sqft_basement'] > 0)]['id'].count()


# 5.2 Выберите дом клиенту

# Клиент хочет дом либо с очень красивым видом из окна, либо с видом на набережную, в очень хорошем состоянии и год постройки не меньше 1980 года. В какой ценовом диапазоне будут дома?

# In[20]:


min_price = df[(df['waterfront'] == 1) & (df['condition'] == 5) & (df['yr_built'] >= 1980)]['price'].min()
max_price = df[(df['waterfront'] == 1) & (df['condition'] == 5) & (df['yr_built'] >= 1980)]['price'].max()
print(f'{min_price}$ - {max_price}$')


# 5.3 Выберите дом клиенту

# Клиент хочет дом без подвала, с двумя этажами, стоимостью до 150000. Какая оценка по состоянию у таких домов в среднем?

# In[21]:


df[(df['sqft_basement'] == 0) | (df['floors'] == 2) & (df['price'] <= 15000)]['price'].mean()


# In[ ]:




