#!/usr/bin/env python
# coding: utf-8

# ## Задание 1

# ### 1/На складе лежат разные фрукты в разном количестве. Нужно написать функцию, которая на вход принимает любое количество названий фруктов и их количество, а возвращает общее количество фруктов на складе

# In[12]:


fruits = {'apple': 5, 'orange': 6, 'pineapple': 10, 'grape': 8, 'kiwi': 6}


# In[13]:


def get_count(**kwargs):
    return sum(kwargs.values())   


# In[14]:


get_count(**fruits)


# ## Задание 2

# ### 1.2 Дан список с затратами на рекламу. Но в данных есть ошибки, некоторые затраты имеют отрицательную величину. Удалите такие значения из списка и посчитайте суммарные затраты. Используйте list comprehensions

# In[16]:


my_list = [100, 125, -90, 345, 655, -1, 0, 200]


# In[17]:


sum([i for i in my_list if i > 0])


# ## Задание 3

# ### Задание 3.1

# Даны два списка:
# 
# дата покупки
# суммы покупок по датам
# Найдите, какая выручка у компании в ноябре Используйте list comprehensions

# In[19]:


b_dates = ['2021-09-14', '2021-12-15', '2021-09-08', '2021-12-05', '2021-10-09', '2021-09-30', '2021-12-22', '2021-11-29', 
          '2021-12-24', '2021-11-26', '2021-10-27', '2021-12-18', '2021-11-09', '2021-11-23', '2021-09-27', '2021-10-02', 
          '2021-12-27', '2021-09-20', '2021-12-13', '2021-11-01', '2021-11-09', '2021-12-06', '2021-12-08', '2021-10-09', 
          '2021-10-31', '2021-09-30', '2021-11-09', '2021-12-13', '2021-10-26', '2021-12-09']

b_costs = [1270, 8413, 9028, 3703, 5739, 4095, 295, 4944, 5723, 3701, 4471, 651, 7037, 4274, 6275, 4988, 6930, 2971, 6592, 
           2004, 2822, 519, 3406, 2732, 5015, 2008, 316, 6333, 5700, 2887]


# In[20]:


sum([b_costs[i] if b_dates[i][5:7] == '09' else 0 for i in range(len(b_dates))])


# ## Задание 3.2

# Найдите выручку компании в зависимости от месяца Для этого напишите функцию, которая на вход принимает список с датами и список с выручкой, а на выходе словарь, где ключи - это месяцы, а значения - это выручка.

# In[22]:


def create_dict(list1: list, list2: list) -> dict:
    my_dict = {}
    for i in range(len(list1)):
        if list1[i][5:7] not in my_dict:
            my_dict[list1[i][5:7]] = list2[i]
        else:
            my_dict[list1[i][5:7]] += list2[i]
    return dict(sorted(my_dict.items()))


# In[23]:


create_dict(b_dates, b_costs)


# In[ ]:




